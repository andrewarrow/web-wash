group 'team.higher.webwash'
version '1.0-SNAPSHOT'

buildscript {
  ext.kotlinVersion = '1.1.2'
  ext.dropwizardVersion = '1.1.0'
  ext.rxVersion = '2.1.0'
  ext.gradleDockerPluginVersion = '3.0.8'
  ext.retrofitVersion = '2.3.0'
  ext.okHttpVersion = '3.5.0'
  ext.requeryVersion = '1.4.0'
  ext.sqsDropwizardVersion = '1.0.5'
  ext.rxJerseyVersion = '0.9.0'
  ext.jacksonVersion = '2.8.7'
  ext.daggerVersion = '2.5'
  ext.hikariVersion = '2.6.2'
  ext.commonValidatorVersion = '1.6'
  ext.prettytimeVersion = '3.2.7.Final'

  repositories {
    jcenter()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    classpath "com.bmuschko:gradle-docker-plugin:$gradleDockerPluginVersion"
    classpath 'net.ltgt.gradle:gradle-apt-plugin:0.5'
    classpath "io.interact:sqs-dropwizard:$sqsDropwizardVersion"
  }
}

apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'kotlin-kapt'

repositories {
  mavenCentral()
  jcenter()
  maven { url "https://jitpack.io" }
}

project.ext {
  configPath = "$rootProject.projectDir/deploy/"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
  main {
    java {
      srcDirs += 'src'
      srcDirs += "${buildDir.absolutePath}/generated/source/kapt/main"
    }
    idea.module.generatedSourceDirs += file("$buildDir/generated/source/kapt/")

    kotlin {
      srcDirs += 'src'
    }

    resources {
      srcDirs += 'resources/main'
    }
  }

  test {
    java {
      test.java.srcDirs += 'test'
    }

    kotlin {
      srcDirs += 'test'
    }

    resources {
      srcDirs += 'resources/test'
    }
  }
}


dependencies {
  // Kotlin
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

  // Kotlin functional
  compile 'org.funktionale:funktionale-all:1.1'

  // REST Server
  compile "io.dropwizard:dropwizard-core:$dropwizardVersion"
  compile "io.dropwizard:dropwizard-auth:$dropwizardVersion"
  compile "io.dropwizard:dropwizard-views-freemarker:$dropwizardVersion"
  compile "io.dropwizard:dropwizard-assets:$dropwizardVersion"

  // Pretty Time
  compile "org.ocpsoft.prettytime:prettytime:$prettytimeVersion"

  // Rx Jersey
  compile "com.github.alex-shpak.rx-jersey:dropwizard:$rxJerseyVersion"
  compile "com.github.alex-shpak.rx-jersey:rxjava2-client:$rxJerseyVersion"
  compile "com.github.alex-shpak.rx-jersey:rxjava2-server:$rxJerseyVersion"

  // Reactive Java/Kotlin
  compile "io.reactivex.rxjava2:rxjava:$rxVersion"
  compile "io.reactivex.rxjava2:rxkotlin:$rxVersion"

  // Http Client
  compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
  compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
  compile "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
  compile "com.squareup.okhttp3:okhttp:$okHttpVersion"
  compile "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
  compile "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"

  // SQS
  compile "io.interact:sqs-dropwizard:$sqsDropwizardVersion"

  // JSON Jackson
  compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
  compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"

  // Dependency Injection
  compile "com.google.dagger:dagger:$daggerVersion"
  kapt "com.google.dagger:dagger-compiler:$daggerVersion"

  // Common validator
  compile "commons-validator:commons-validator:$commonValidatorVersion"

  compile 'ch.qos.logback.contrib:logback-json-classic:0.1.2'
  compile 'ch.qos.logback.contrib:logback-jackson:0.1.2'

  // Testing
  testCompile "io.dropwizard:dropwizard-testing:$dropwizardVersion"
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:2.8.9'
  testCompile 'org.assertj:assertj-core:3.8.0'
  testCompile 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
  testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.25.1'
  testCompile group: 'io.kotlintest', name: 'kotlintest', version: '2.0.3'
}

mainClassName = 'team.higher.web.MainApplication'
run {
  args 'server', configPath + 'config.yml'
}

distributions {
  latest {
    baseName = 'latestweb'
    contents {
      from { './build/libs/wash-web-1.0-SNAPSHOT-all.jar' }
      from { 'deploy/' }
    }
  }
}

docker {
  if (System.env.DOCKER_CERT_PATH) {
    certPath = new File(System.env.DOCKER_CERT_PATH)
  }

  javaApplication {
    baseImage = 'openjdk:8'
    ports = [3000]
    tag = 'wash-web:0.0.1'
  }
}

// Dagger for DI
kapt {
  generateStubs = true
}

shadowJar {
  mergeServiceFiles()
  zip64 = true
  manifest {
    attributes 'Main-Class': 'team.higher.web.MainApplication'
  }
}
